# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.
"""
import os
import subprocess
import shutil

def install():
  os.system("git clone https://github.com/frankligy/DeepImmuno")
  for file in os.listdir("DeepImmuno"):
    source = "DeepImmuno/" + file
    destination = file
    shutil.move(source, destination)
  shutil.rmtree('DeepImmuno', ignore_errors=True)
  os.makedirs("input", exist_ok=True)

#os.system("pip3 install torch torchvision torchaudio")

# Commented out IPython magic to ensure Python compatibility.

def test_s():
  return subprocess.run("(python3 deepimmuno-cnn.py --mode \"single\" --epitope \"HPPLMNVER\" --hla \"HLA-A*0201\")",
    encoding="utf-8", capture_output=True,text=True,shell=True)

def test():
  with open('inputs.txt', 'w') as f:
      f.write('''AAAAAAAAA,HLA-A*0201
CCCCCCCCC,HLA-B*5801
DDDDDDDDD,HLA-C*0702''')

  os.system("mv inputs.txt inputs.csv")

  os.makedirs("outputs", exist_ok = True)
  return subprocess.run("(python3 deepimmuno-cnn.py --mode \"multiple\" --intdir \"inputs.csv\" --outdir \"outputs\")",
        encoding="utf-8", capture_output=True,text=True,shell=True)


def run(filedir=None, convert=True):
  if not filedir:
    with os.scandir("input") as inputs:
      for input_sing in inputs:
        if os.path.isfile(input_sing) == True:
          input_sing = os.path.basename(input_sing)
          if input_sing.endswith(".csv"):
            filedir = "input/" + input_sing
  if not filedir:
    with os.scandir(".") as inputs:
      for input_sing in inputs:
        if os.path.isfile(input_sing) == True:
          input_sing = os.path.basename(input_sing)
          if input_sing.endswith(".csv"):
            filedir = input_sing
  if not filedir: #if it didnt find anything for some reason
    raise FileException("Error: no file found. (Does it have a wrong extension or is it placed on the incorrect folder?)")
   
  print("File found successfully.")   
  os.makedirs("outputs", exist_ok=True)
  #converting from a set structure#########################################
  import pandas as pd
  if convert:
    print("Converting CSV...")
    filedirpath = os.path.dirname(filedir)
    os.makedirs(f"backup/{filedirpath}", exist_ok=True)
    shutil.copyfile(filedir, f"backup/{filedir}")
    df = pd.read_csv(filedir)
    #dfbkup = df
    df_headers = list(df.columns)
    deepimmuno_headers = ['peptide','allele'] #it actually doesn't use headers but for better sorting
    #specific deepimmuno sorting 

    #extra_df_headers = df_headers[2:] #extra is for future merging of csvs once I figure out how to use the output
    #extra_df = df.iloc[:, 2:]
    #annotation_df = df.iloc[:, 0]
    
    #DeepImmuno does not like : on alleles so we're removing them
    df[f"{df_headers[2]}"] = df[f"{df_headers[2]}"].str.replace(':','')
    df = df.iloc[:, [1,2]]
    #we actually don't need to re-sort anything on here, just get rid of the annotation column
    with open(filedir, 'w') as outfile:
      outfile.write(df.to_csv(header=None,index=False)) #no titles on deepimmuno
      outfile.close()
  ###################################################################
  print("Processing...")
  result = subprocess.run(f"(python3 deepimmuno-cnn.py --mode \"multiple\" --intdir \"{filedir}\" --outdir \"outputs\")",
        encoding="utf-8", capture_output=True,text=True,shell=True)
  print("Success! Downloading your CSV shortly...")
  if convert:
    shutil.copyfile(f"backup/{filedir}", filedir)
  #merge result with original df
  os.system("mv outputs/deepimmuno-cnn-result.txt outputs/deepimmuno-cnn-result.csv")
  dfresult = pd.read_csv("outputs/deepimmuno-cnn-result.csv", sep="\t")
  dfconcat = pd.concat([pd.read_csv(filedir), dfresult.iloc[:, 2:]], axis="columns")
  with open(f"{filedir[:-4]}_DI_result.csv", 'w') as outfile:
      outfile.write(dfconcat.to_csv())
      outfile.close()
  from google.colab import files
  files.download(f"{filedir[:-4]}_DI_result.csv")
  print(f"Downloaded on your local computer. Name: \"{filedir[:-4]}_DI_result.csv\"")
  return result
